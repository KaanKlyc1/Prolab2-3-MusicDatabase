/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.util.Vector;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alperen
 */
public class İlişkiler extends javax.swing.JFrame {

    /**
     * Creates new form İlişkiler
     */
    public İlişkiler() {
        initComponents();
        güncelle();
        güncelle1();
    }

    
    public void güncelle(){
        int i,j;
        
        try {
            Veritabanı.pstmt= Veritabanı.con.prepareStatement("SELECT sarkilar_sanatcilar.id,sarkilar.sarki_id,sanatcilar.sanatci_id,sarkilar.sarki_ad,sanatcilar.sanatci_ad  FROM sarkilar JOIN sarkilar_sanatcilar ON (sarkilar.sarki_id=sarkilar_sanatcilar.sarki_id) JOIN sanatcilar ON (sanatcilar.sanatci_id=sarkilar_sanatcilar.sanatci_id)");
            Veritabanı.rs= Veritabanı.pstmt.executeQuery();
            ResultSetMetaData AlbumData = Veritabanı.rs.getMetaData();
            i = AlbumData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel)şarkısanatçıTablo.getModel();
            RecordTable.setRowCount(0);
            while(Veritabanı.rs.next()){
            Vector columnData = new Vector();
            for(j=1;j<=i;j++){
             columnData.add(Veritabanı.rs.getString("id"));
             columnData.add(Veritabanı.rs.getString("sarki_id"));
             columnData.add(Veritabanı.rs.getString("sanatci_id"));
             columnData.add(Veritabanı.rs.getString("sarki_ad"));
             columnData.add(Veritabanı.rs.getString("sanatci_ad"));
            }
            RecordTable.addRow(columnData);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(İlişkiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void güncelle1(){
        int i,j;
        
        try {
            Veritabanı.pstmt= Veritabanı.con.prepareStatement("SELECT sanatcilar_albumler.id,albumler.album_id,sanatcilar.sanatci_id,albumler.album_ad,sanatcilar.sanatci_ad  FROM albumler JOIN sanatcilar_albumler ON (albumler.album_id=sanatcilar_albumler.album_id) JOIN sanatcilar ON (sanatcilar.sanatci_id=sanatcilar_albumler.sanatci_id)");
            Veritabanı.rs= Veritabanı.pstmt.executeQuery();
            ResultSetMetaData AlbumData = Veritabanı.rs.getMetaData();
            i = AlbumData.getColumnCount();
            DefaultTableModel RecordTable = (DefaultTableModel) albümsanatçıTablo.getModel();
            RecordTable.setRowCount(0);
            while(Veritabanı.rs.next()){
            Vector columnData = new Vector();
            for(j=1;j<=i;j++){
             columnData.add(Veritabanı.rs.getString("id"));
             columnData.add(Veritabanı.rs.getString("sanatci_id"));
             columnData.add(Veritabanı.rs.getString("album_id"));
             columnData.add(Veritabanı.rs.getString("sanatci_ad"));
             columnData.add(Veritabanı.rs.getString("album_ad"));
            }
            RecordTable.addRow(columnData);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(İlişkiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        şarkısanatçıTablo = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        albümsanatçıTablo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtf_şarkı = new javax.swing.JTextField();
        txtf_sanatçı1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtf_albüm = new javax.swing.JTextField();
        txtf_sanatçı2 = new javax.swing.JTextField();
        ekleButon1 = new javax.swing.JButton();
        ekleButon2 = new javax.swing.JButton();
        bitirButon = new javax.swing.JButton();
        güncelleButonB = new javax.swing.JButton();
        güncelleButonA = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        şarkısanatçıTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Şarkı ID", "Sanatçı ID", "Şarkı Adı", "Sanatçı Adı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        şarkısanatçıTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                şarkısanatçıTabloMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(şarkısanatçıTablo);

        albümsanatçıTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Sanatçı ID", "Albüm ID", "Sanatçı Adı", "Albüm Adı"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        albümsanatçıTablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                albümsanatçıTabloMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(albümsanatçıTablo);

        jLabel1.setText("Şarkı ID");

        jLabel2.setText("Sanatçı ID");

        jLabel3.setText("Albüm ID");

        jLabel4.setText("Sanatçı ID");

        ekleButon1.setText("EKLE");
        ekleButon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekleButon1ActionPerformed(evt);
            }
        });

        ekleButon2.setText("EKLE");
        ekleButon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekleButon2ActionPerformed(evt);
            }
        });

        bitirButon.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bitirButon.setText("BİTİR");
        bitirButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bitirButonActionPerformed(evt);
            }
        });

        güncelleButonB.setText("GÜNCELLE");
        güncelleButonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                güncelleButonBActionPerformed(evt);
            }
        });

        güncelleButonA.setText("GÜNCELLE");
        güncelleButonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                güncelleButonAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bitirButon, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(201, 201, 201))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtf_şarkı, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtf_sanatçı1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(güncelleButonA)
                                    .addComponent(ekleButon1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtf_sanatçı2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(35, 35, 35)
                                        .addComponent(txtf_albüm, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ekleButon2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(güncelleButonB))
                                .addGap(27, 27, 27))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtf_sanatçı2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtf_şarkı, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtf_sanatçı1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txtf_albüm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ekleButon1)
                            .addComponent(ekleButon2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(güncelleButonA)
                            .addComponent(güncelleButonB))
                        .addGap(32, 32, 32)
                        .addComponent(bitirButon, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bitirButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bitirButonActionPerformed
        Proje3.AdminPanel= new AdminPanel();
        Proje3.AdminPanel.setLocationRelativeTo(null);
        Proje3.AdminPanel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bitirButonActionPerformed

    private void şarkısanatçıTabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_şarkısanatçıTabloMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel) şarkısanatçıTablo.getModel();
        int seçilen = şarkısanatçıTablo.getSelectedRow();
        txtf_şarkı.setText(RecordTable.getValueAt(seçilen, 1).toString());
        txtf_sanatçı1.setText(RecordTable.getValueAt(seçilen, 2).toString());
        
    }//GEN-LAST:event_şarkısanatçıTabloMouseClicked

    private void albümsanatçıTabloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_albümsanatçıTabloMouseClicked
        DefaultTableModel RecordTable = (DefaultTableModel) albümsanatçıTablo.getModel();
        int seçilen = albümsanatçıTablo.getSelectedRow();
        txtf_sanatçı2.setText(RecordTable.getValueAt(seçilen, 1).toString());
        txtf_albüm.setText(RecordTable.getValueAt(seçilen, 2).toString());
    }//GEN-LAST:event_albümsanatçıTabloMouseClicked

    private void ekleButon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekleButon1ActionPerformed
        try {
            Veritabanı.pstmt= Veritabanı.con.prepareStatement("INSERT INTO sarkilar_sanatcilar(sarki_id,sanatci_id) values (?,?)");
            Veritabanı.pstmt.setString(1, txtf_şarkı.getText());
            Veritabanı.pstmt.setString(2, txtf_sanatçı1.getText());
            Veritabanı.pstmt.executeUpdate();
            güncelle();
        } catch (SQLException ex) {
            Logger.getLogger(İlişkiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ekleButon1ActionPerformed

    private void güncelleButonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_güncelleButonAActionPerformed
        
            DefaultTableModel RecordTable = (DefaultTableModel) şarkısanatçıTablo.getModel();
            int seçilen = şarkısanatçıTablo.getSelectedRow();
            try {
            int id = Integer.parseInt(RecordTable.getValueAt(seçilen, 0).toString());
            Veritabanı.pstmt= Veritabanı.con.prepareStatement("UPDATE sarkilar_sanatcilar set sarki_id=?,sanatci_id=? WHERE id=?");
            Veritabanı.pstmt.setString(1, txtf_şarkı.getText());
            Veritabanı.pstmt.setString(2, txtf_sanatçı1.getText());
            Veritabanı.pstmt.setInt(3, id);
            Veritabanı.pstmt.executeUpdate();
            güncelle();
        } catch (SQLException ex) {
            Logger.getLogger(İlişkiler.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_güncelleButonAActionPerformed

    private void ekleButon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekleButon2ActionPerformed
        try {
            Veritabanı.pstmt= Veritabanı.con.prepareStatement("INSERT INTO sanatcilar_albumler(sanatci_id,album_id) values (?,?)");
            Veritabanı.pstmt.setString(1, txtf_sanatçı2.getText());
            Veritabanı.pstmt.setString(2, txtf_albüm.getText());
            Veritabanı.pstmt.executeUpdate();
            güncelle1();
        } catch (SQLException ex) {
            Logger.getLogger(İlişkiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ekleButon2ActionPerformed

    private void güncelleButonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_güncelleButonBActionPerformed
            DefaultTableModel RecordTable = (DefaultTableModel) albümsanatçıTablo.getModel();
            int seçilen = albümsanatçıTablo.getSelectedRow();
            try {
            int id = Integer.parseInt(RecordTable.getValueAt(seçilen, 0).toString());
            Veritabanı.pstmt= Veritabanı.con.prepareStatement("UPDATE sanatcilar_albumler set sanatci_id=?,album_id=? WHERE id=?");
            Veritabanı.pstmt.setString(1, txtf_sanatçı2.getText());
            Veritabanı.pstmt.setString(2, txtf_albüm.getText());
            Veritabanı.pstmt.setInt(3, id);
            Veritabanı.pstmt.executeUpdate();
            güncelle1();
        } catch (SQLException ex) {
            Logger.getLogger(İlişkiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_güncelleButonBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(İlişkiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(İlişkiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(İlişkiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(İlişkiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new İlişkiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable albümsanatçıTablo;
    private javax.swing.JButton bitirButon;
    private javax.swing.JButton ekleButon1;
    private javax.swing.JButton ekleButon2;
    private javax.swing.JButton güncelleButonA;
    private javax.swing.JButton güncelleButonB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtf_albüm;
    private javax.swing.JTextField txtf_sanatçı1;
    private javax.swing.JTextField txtf_sanatçı2;
    private javax.swing.JTextField txtf_şarkı;
    private javax.swing.JTable şarkısanatçıTablo;
    // End of variables declaration//GEN-END:variables
}
